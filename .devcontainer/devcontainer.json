{
    "name": "project-dev",
    "dockerComposeFile": [
        "docker-compose.yml"
    ],
    "service": "vscode",
    "runArgs": [
        "-v",
        "${env:SSH_AUTH_SOCK}:/tmp/ssh-agent.socket",
        "-e",
        "SSH_AUTH_SOCK=/tmp/ssh-agent.socket"
    ],
    "runServices": [
        "vscode"
    ],
    "shutdownAction": "stopCompose",
    "postCreateCommand": "chmod -R 700 .git && kind export kubeconfig && go mod download",
    "workspaceFolder": "/go/src/github.com/nolte/minecraft-operator",
    // "overrideCommand": "",
    "extensions": [
        // General backend
        "mohsen1.prettify-json",
        "bajdzis.vscode-database", // Supports connections to mysql or postgres, over SSL, socked
        "redhat.vscode-yaml", // Kubernetes and Kedge syntax support
        // Go
        "ms-vscode.go",
        // Console
        "IBM.output-colorizer",
        // Git
        "eamodio.gitlens",
        "mhutchie.git-graph",
        // Other linters
        "davidanson.vscode-markdownlint",
        "ms-azuretools.vscode-docker",
        // Other helpers
        "shardulm94.trailing-spaces",
        "Gruntfuggly.todo-tree",
        "bierner.emojisense",
        "stkb.rewrap", // rewrap comments after n characters on one line
        // Other
        "jrebocho.vscode-random", // generate random values
        "alefragnani.Bookmarks",
        "quicktype.quicktype", // Paste JSON as code
        "spikespaz.vscode-smoothtype", // smooth cursor animation
        "vscode-icons-team.vscode-icons",
        // kubernetes stuff
        "ms-kubernetes-tools.kind-vscode",
        "mauve.terraform",
        "ms-kubernetes-tools.vscode-kubernetes-tools",
        "felipecaputo.git-project-manager"
    ],
    "settings": {
        // General settings
        "files.eol": "\n",
        // Docker
        "remote.extensionKind": {
            "ms-azuretools.vscode-docker": "workspace"
        },
        // Golang general settings
        "go.useLanguageServer": true,
        "go.autocompleteUnimportedPackages": true,
        "go.gotoSymbol.includeImports": true,
        "go.gotoSymbol.includeGoroot": true,
        "gopls": {
            "completeUnimported": true,
            "deepCompletion": true,
            "usePlaceholders": false
        },
        "go.lintTool": "golangci-lint",
        "go.lintFlags": [
            "--fast",
            "--enable",
            "bodyclose",
            "--enable",
            "dogsled",
            "--enable",
            "dupl",
            "--enable",
            "gochecknoglobals",
            "--enable",
            "gochecknoinits",
            "--enable",
            "gocognit",
            "--enable",
            "goconst",
            "--enable",
            "gocritic",
            "--enable",
            "gocyclo",
            "--enable",
            "goimports",
            "--enable",
            "golint",
            "--enable",
            "gosec",
            "--enable",
            "interfacer",
            "--enable",
            "maligned",
            "--enable",
            "misspell",
            "--enable",
            "nakedret",
            "--enable",
            "prealloc",
            "--enable",
            "scopelint",
            "--enable",
            "unconvert",
            "--enable",
            "unparam",
            "--enable",
            "whitespace"
        ],
        // Golang on save
        "go.buildOnSave": "workspace",
        "go.lintOnSave": "workspace",
        "go.vetOnSave": "workspace",
        "editor.formatOnSave": true,
        "[go]": {
            "editor.codeActionsOnSave": {
                "source.organizeImports": true
            }
        },
        // Golang testing
        "go.toolsEnvVars": {
            "GOFLAGS": "-tags=integration"
        },
        "gopls.env": {
            "GOFLAGS": "-tags=integration"
        },
        "go.testEnvVars": {},
        "go.testFlags": [
            "-v",
            "-race"
        ],
        "go.testTimeout": "600s"
    }
}